name: Create Docker Image

env:
  JAVA_VERSION: '21'
  IMAGE_NAME: 'pdf_generator'
  VERSION: 'v1.0.0'

on:
  push:
    branches:
      - 'master'
      - 'SW-78--CI/CD-workflow'
      - 'releases/**'
      - 'release/**'

jobs:
  build:
    name: Build and push docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          server-id: github

      - name: Build JAR with Maven
        env:
          APIKEY: ${{ secrets.API_KEY }}
        run: mvn clean package

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=PdfGenerator -Dsonar.projectName='PdfGenerator'

      - name: Build image with docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/infra/Dockerfile
          push: false
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}

        #TODO: push image to the Azure Container Registry

  deploy-dev:
    needs: build
    if: github.ref == 'refs/heads/SW-78--CI/CD-workflow'
    uses: ./.github/workflows/publish.yml
    with:
      environmentName: "Development"

  deploy-stage:
    needs: build
    if: ${{ startsWith(github.ref, 'refs/heads/release/') }}
    uses: ./.github/workflows/publish.yml
    with:
      environmentName: "Staging"

  deploy-prod:
    needs: deploy-stage
    if: ${{ startsWith(github.ref, 'refs/heads/release/') }}
    uses: ./.github/workflows/publish.yml
    with:
      environmentName: "Production"

